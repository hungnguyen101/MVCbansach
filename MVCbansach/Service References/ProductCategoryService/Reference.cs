//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCbansach.ProductCategoryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductCategory", Namespace="http://schemas.datacontract.org/2004/07/BookStoreOnline.EF")]
    [System.SerializableAttribute()]
    public partial class ProductCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetaDescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetaKeyWordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetaTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeoTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ShowOnHomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SlugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ViewCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DisplayOrder {
            get {
                return this.DisplayOrderField;
            }
            set {
                if ((this.DisplayOrderField.Equals(value) != true)) {
                    this.DisplayOrderField = value;
                    this.RaisePropertyChanged("DisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaDescriptions {
            get {
                return this.MetaDescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaDescriptionsField, value) != true)) {
                    this.MetaDescriptionsField = value;
                    this.RaisePropertyChanged("MetaDescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaKeyWords {
            get {
                return this.MetaKeyWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaKeyWordsField, value) != true)) {
                    this.MetaKeyWordsField = value;
                    this.RaisePropertyChanged("MetaKeyWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaTitle {
            get {
                return this.MetaTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaTitleField, value) != true)) {
                    this.MetaTitleField = value;
                    this.RaisePropertyChanged("MetaTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeoTitle {
            get {
                return this.SeoTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SeoTitleField, value) != true)) {
                    this.SeoTitleField = value;
                    this.RaisePropertyChanged("SeoTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ShowOnHome {
            get {
                return this.ShowOnHomeField;
            }
            set {
                if ((this.ShowOnHomeField.Equals(value) != true)) {
                    this.ShowOnHomeField = value;
                    this.RaisePropertyChanged("ShowOnHome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Slug {
            get {
                return this.SlugField;
            }
            set {
                if ((object.ReferenceEquals(this.SlugField, value) != true)) {
                    this.SlugField = value;
                    this.RaisePropertyChanged("Slug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbnail {
            get {
                return this.ThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailField, value) != true)) {
                    this.ThumbnailField = value;
                    this.RaisePropertyChanged("Thumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ViewCount {
            get {
                return this.ViewCountField;
            }
            set {
                if ((this.ViewCountField.Equals(value) != true)) {
                    this.ViewCountField = value;
                    this.RaisePropertyChanged("ViewCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductCategoryService.IProductCategory")]
    public interface IProductCategory {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/findAll", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/findAllResponse")]
        MVCbansach.ProductCategoryService.ProductCategory[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/findAll", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/findAllResponse")]
        System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/findById", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/findByIdResponse")]
        MVCbansach.ProductCategoryService.ProductCategory findById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/findById", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/findByIdResponse")]
        System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory> findByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/insert", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/insertResponse")]
        long insert(MVCbansach.ProductCategoryService.ProductCategory entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/insert", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/insertResponse")]
        System.Threading.Tasks.Task<long> insertAsync(MVCbansach.ProductCategoryService.ProductCategory entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/update", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/updateResponse")]
        bool update(MVCbansach.ProductCategoryService.ProductCategory entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/update", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/updateResponse")]
        System.Threading.Tasks.Task<bool> updateAsync(MVCbansach.ProductCategoryService.ProductCategory entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/delete", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/deleteResponse")]
        bool delete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_ProductCategory/delete", ReplyAction="http://tempuri.org/IModelOf_ProductCategory/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductCategory/findByParentId", ReplyAction="http://tempuri.org/IProductCategory/findByParentIdResponse")]
        MVCbansach.ProductCategoryService.ProductCategory[] findByParentId(long parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductCategory/findByParentId", ReplyAction="http://tempuri.org/IProductCategory/findByParentIdResponse")]
        System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory[]> findByParentIdAsync(long parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductCategory/findByShowOnHome", ReplyAction="http://tempuri.org/IProductCategory/findByShowOnHomeResponse")]
        MVCbansach.ProductCategoryService.ProductCategory[] findByShowOnHome(bool showOnHome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductCategory/findByShowOnHome", ReplyAction="http://tempuri.org/IProductCategory/findByShowOnHomeResponse")]
        System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory[]> findByShowOnHomeAsync(bool showOnHome);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductCategoryChannel : MVCbansach.ProductCategoryService.IProductCategory, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductCategoryClient : System.ServiceModel.ClientBase<MVCbansach.ProductCategoryService.IProductCategory>, MVCbansach.ProductCategoryService.IProductCategory {
        
        public ProductCategoryClient() {
        }
        
        public ProductCategoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductCategoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductCategoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductCategoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCbansach.ProductCategoryService.ProductCategory[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public MVCbansach.ProductCategoryService.ProductCategory findById(long id) {
            return base.Channel.findById(id);
        }
        
        public System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory> findByIdAsync(long id) {
            return base.Channel.findByIdAsync(id);
        }
        
        public long insert(MVCbansach.ProductCategoryService.ProductCategory entity) {
            return base.Channel.insert(entity);
        }
        
        public System.Threading.Tasks.Task<long> insertAsync(MVCbansach.ProductCategoryService.ProductCategory entity) {
            return base.Channel.insertAsync(entity);
        }
        
        public bool update(MVCbansach.ProductCategoryService.ProductCategory entity) {
            return base.Channel.update(entity);
        }
        
        public System.Threading.Tasks.Task<bool> updateAsync(MVCbansach.ProductCategoryService.ProductCategory entity) {
            return base.Channel.updateAsync(entity);
        }
        
        public bool delete(long id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(long id) {
            return base.Channel.deleteAsync(id);
        }
        
        public MVCbansach.ProductCategoryService.ProductCategory[] findByParentId(long parentId) {
            return base.Channel.findByParentId(parentId);
        }
        
        public System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory[]> findByParentIdAsync(long parentId) {
            return base.Channel.findByParentIdAsync(parentId);
        }
        
        public MVCbansach.ProductCategoryService.ProductCategory[] findByShowOnHome(bool showOnHome) {
            return base.Channel.findByShowOnHome(showOnHome);
        }
        
        public System.Threading.Tasks.Task<MVCbansach.ProductCategoryService.ProductCategory[]> findByShowOnHomeAsync(bool showOnHome) {
            return base.Channel.findByShowOnHomeAsync(showOnHome);
        }
    }
}
