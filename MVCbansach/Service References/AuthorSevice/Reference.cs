//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCbansach.AuthorSevice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Author", Namespace="http://schemas.datacontract.org/2004/07/BookStoreOnline.EF")]
    [System.SerializableAttribute()]
    public partial class Author : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthorSevice.IAuthor")]
    public interface IAuthor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/findAll", ReplyAction="http://tempuri.org/IModelOf_Author/findAllResponse")]
        MVCbansach.AuthorSevice.Author[] findAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/findAll", ReplyAction="http://tempuri.org/IModelOf_Author/findAllResponse")]
        System.Threading.Tasks.Task<MVCbansach.AuthorSevice.Author[]> findAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/findById", ReplyAction="http://tempuri.org/IModelOf_Author/findByIdResponse")]
        MVCbansach.AuthorSevice.Author findById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/findById", ReplyAction="http://tempuri.org/IModelOf_Author/findByIdResponse")]
        System.Threading.Tasks.Task<MVCbansach.AuthorSevice.Author> findByIdAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/insert", ReplyAction="http://tempuri.org/IModelOf_Author/insertResponse")]
        long insert(MVCbansach.AuthorSevice.Author entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/insert", ReplyAction="http://tempuri.org/IModelOf_Author/insertResponse")]
        System.Threading.Tasks.Task<long> insertAsync(MVCbansach.AuthorSevice.Author entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/update", ReplyAction="http://tempuri.org/IModelOf_Author/updateResponse")]
        bool update(MVCbansach.AuthorSevice.Author entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/update", ReplyAction="http://tempuri.org/IModelOf_Author/updateResponse")]
        System.Threading.Tasks.Task<bool> updateAsync(MVCbansach.AuthorSevice.Author entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/delete", ReplyAction="http://tempuri.org/IModelOf_Author/deleteResponse")]
        bool delete(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelOf_Author/delete", ReplyAction="http://tempuri.org/IModelOf_Author/deleteResponse")]
        System.Threading.Tasks.Task<bool> deleteAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorChannel : MVCbansach.AuthorSevice.IAuthor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorClient : System.ServiceModel.ClientBase<MVCbansach.AuthorSevice.IAuthor>, MVCbansach.AuthorSevice.IAuthor {
        
        public AuthorClient() {
        }
        
        public AuthorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCbansach.AuthorSevice.Author[] findAll() {
            return base.Channel.findAll();
        }
        
        public System.Threading.Tasks.Task<MVCbansach.AuthorSevice.Author[]> findAllAsync() {
            return base.Channel.findAllAsync();
        }
        
        public MVCbansach.AuthorSevice.Author findById(long id) {
            return base.Channel.findById(id);
        }
        
        public System.Threading.Tasks.Task<MVCbansach.AuthorSevice.Author> findByIdAsync(long id) {
            return base.Channel.findByIdAsync(id);
        }
        
        public long insert(MVCbansach.AuthorSevice.Author entity) {
            return base.Channel.insert(entity);
        }
        
        public System.Threading.Tasks.Task<long> insertAsync(MVCbansach.AuthorSevice.Author entity) {
            return base.Channel.insertAsync(entity);
        }
        
        public bool update(MVCbansach.AuthorSevice.Author entity) {
            return base.Channel.update(entity);
        }
        
        public System.Threading.Tasks.Task<bool> updateAsync(MVCbansach.AuthorSevice.Author entity) {
            return base.Channel.updateAsync(entity);
        }
        
        public bool delete(long id) {
            return base.Channel.delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteAsync(long id) {
            return base.Channel.deleteAsync(id);
        }
    }
}
